name: i18n - Build and Deploy

on:
  workflow_dispatch:

jobs:
  build:
    name: Build
    runs-on: ubuntu-20.04

    strategy:
      fail-fast: false
      matrix:
        node-version: [18.x]
        languages:
          [chinese, espanol, italian, japanese, korean, portuguese, ukrainian]
        site_tlds: [org]
    steps:
      - name: Install doctl
        uses: digitalocean/action-doctl@v2
        with:
          token: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}

      - name: Log in to DigitalOcean Container Registry with short-lived credentials
        run: doctl registry login --expiry-seconds 1200

      - name: Clean old DO images
        run: |
          rawResponse=$(doctl registry repository list-tags org/news-${{ matrix.languages }} --output=json)
          tags=$(jq '[.[] | {updated_at, tag}]' <<<"$rawResponse")
          toDelete=()
          len=$(jq length <<<"$tags")
          echo "Found $len tags."
          for i in $(seq 0 $((len - 1))); do
              tag=$(echo $tags | jq -r --argjson index "$i" '.[$index].tag')
              updated=$(echo $tags | jq -r --argjson index "$i" '.[$index].updated_at')
              updatedDate=$(date -d $updated +%s)
              now=$(date +%s)
              diff=$(($now - $updatedDate))
              if [ "$tag" != "latest" ] && [ $diff -gt 172800 ]; then
                  toDelete+=($tag)
              fi
          done
          echo "Found ${#toDelete[@]} tags to delete."
          for value in "${toDelete[@]}"; do
              echo "Deleting tag: $value"
              doctl registry repository delete-tag org/news-${{ matrix.languages }} $value
          done

  clean:
    name: Clean up DO images
    runs-on: ubuntu-20.04
    needs:
      - build

    steps:
      - name: Install doctl
        uses: digitalocean/action-doctl@v2
        with:
          token: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}

      - name: Log in to DigitalOcean Container Registry with short-lived credentials
        run: doctl registry login --expiry-seconds 1200

      - name: Trigger Garbage collection
        run: doctl registry garbage-collection start --include-untagged-manifests
